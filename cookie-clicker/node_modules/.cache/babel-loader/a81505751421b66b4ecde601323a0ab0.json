{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wallison.ferrante\\\\Desktop\\\\PROJECTS\\\\100 - Projetos\\\\cookie-clicker\\\\src\\\\components\\\\ExperienceBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useAll } from \"../hooks/useAll\";\nimport styles from \"../styles/components/ExperienceBar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Level() {\n  _s();\n\n  const {\n    level,\n    currentExperience,\n    experienceToNextLevel\n  } = useAll();\n  const percentToNextLevel = Math.round(currentExperience * 100) / experienceToNextLevel;\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: styles.experienceBar,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"0 xp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${percentToNextLevel}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), currentExperience > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.currentExperience,\n        style: {\n          left: `${percentToNextLevel}%`\n        },\n        children: [Math.round(currentExperience), \" xp\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [experienceToNextLevel, \" xp\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Level, \"kdCDfV4it4j2LE/k3wSpdqP6IsM=\", false, function () {\n  return [useAll];\n});\n\n_c = Level;\n\nvar _c;\n\n$RefreshReg$(_c, \"Level\");","map":{"version":3,"sources":["C:/Users/wallison.ferrante/Desktop/PROJECTS/100 - Projetos/cookie-clicker/src/components/ExperienceBar.jsx"],"names":["useAll","styles","Level","level","currentExperience","experienceToNextLevel","percentToNextLevel","Math","round","experienceBar","width","left"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,+CAAnB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE9B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,iBAAT;AAA4BC,IAAAA;AAA5B,MAAsDL,MAAM,EAAlE;AAEA,QAAMM,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,iBAAiB,GAAG,GAA/B,IAAsCC,qBAAjE;AAGA,sBACE;AAAQ,IAAA,SAAS,EAAEJ,MAAM,CAACQ,aAA1B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,GAAEJ,kBAAmB;AAA/B;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,EAGIF,iBAAiB,GAAG,CAApB,iBACA;AAAM,QAAA,SAAS,EAAEH,MAAM,CAACG,iBAAxB;AAA2C,QAAA,KAAK,EAAE;AAAEO,UAAAA,IAAI,EAAG,GAAEL,kBAAmB;AAA9B,SAAlD;AAAA,mBACGC,IAAI,CAACC,KAAL,CAAWJ,iBAAX,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA,iBAAOC,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAtBuBH,K;UAEsCF,M;;;KAFtCE,K","sourcesContent":["import { useAll } from \"../hooks/useAll\";\r\nimport styles from \"../styles/components/ExperienceBar.module.css\";\r\n\r\nexport default function Level() {\r\n\r\n  const { level, currentExperience, experienceToNextLevel } = useAll();\r\n\r\n  const percentToNextLevel = Math.round(currentExperience * 100) / experienceToNextLevel;\r\n\r\n\r\n  return (\r\n    <header className={styles.experienceBar}>\r\n      <span>0 xp</span>\r\n      <div>\r\n        <div style={{ width: `${percentToNextLevel}%` }}/>\r\n\r\n        { currentExperience > 0 && (\r\n          <span className={styles.currentExperience} style={{ left: `${percentToNextLevel}%` }}>\r\n            {Math.round(currentExperience)} xp\r\n          </span>\r\n        ) }\r\n      </div>\r\n      <span>{experienceToNextLevel} xp</span>\r\n    </header>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}